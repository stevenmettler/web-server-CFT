---
AWSTemplateFormatVersion: "2010-09-09"
Description:
  "AWS CloudFormation Sample Template VPC_with_PublicIPs_And_DNS: Sample
  template that creates a VPC with DNS and public IPs enabled. Note that you are billed
  for the AWS resources that you use when you create a stack from this template."
Parameters:
  KeyPair:
    Description: Name of the keypair to use for SSH access
    Type: String
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: 10.0.0.0/16
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      NetworkAclId:
        Fn::GetAtt:
          - VPC
          - DefaultNetworkAcl
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-8c1be5f6
      NetworkInterfaces:
        - GroupSet:
            - Ref: WebServerSecurityGroup
          AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          DeleteOnTermination: "true"
          SubnetId:
            Ref: PublicSubnet
      KeyName:
        Ref: KeyPair
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash -xe"
              - sudo yum update -y
              - sudo yum install httpd -y
              - sudo /etc/init.d/httpd start
              - echo "<html><body><h1>Hello Wawa!</h1>" > /var/www/html/index.html
              - echo "</body></html>" >> /var/www/html/index.html
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: "14"
      LogGroupName: wawastack-sm
  FlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      LogGroupName: !Ref LogGroup
      ResourceID: !Ref VPC
      ResourceType: "VPC"
      TrafficType: ALL
      DeliverLogsPermissionArn:
        "Fn::GetAtt":
          - IamRole
          - Arn
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iamRoleFlowLogs
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: allow-access-to-cw-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                Resource: "*"
Outputs:
  LogGroupName:
    Description: "The name of the CloudWatch Logs log group where Amazon EC2 publishes your flow logs."
    Value: !Ref LogGroup
  LogGroupARN:
    Description: "The ARN of the CloudWatch Logs log group where Amazon EC2 publishes your flow logs."
    Value: !GetAtt "LogGroup.Arn"
  URL:
    Description: URL of the sample website
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - WebServerInstance
              - PublicDnsName
